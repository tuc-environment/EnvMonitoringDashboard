// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://www.tjcu.edu.cn/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get account information with token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account information",
                "responses": {
                    "200": {
                        "description": "Return account information"
                    },
                    "401": {
                        "description": "Token is incorrect"
                    }
                }
            }
        },
        "/account/changePassword": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change account password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Change Passsword",
                "responses": {
                    "200": {
                        "description": "Return account information"
                    },
                    "401": {
                        "description": "Token is incorrect"
                    }
                }
            }
        },
        "/account/regenrateToken": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Regenrate account access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Regenrate Access Token",
                "responses": {
                    "200": {
                        "description": "Return account information with new token"
                    },
                    "401": {
                        "description": "Token is incorrect"
                    }
                }
            }
        },
        "/api": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get data",
                "responses": {
                    "200": {
                        "description": "Return data"
                    },
                    "401": {
                        "description": "Token is incorrect"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to an account with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Login to an account",
                "parameters": [
                    {
                        "description": "username and password",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/args.AccountLoginArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success, return account information"
                    },
                    "400": {
                        "description": "Username or password is missing"
                    },
                    "401": {
                        "description": "Username or password is incorrect"
                    }
                }
            }
        },
        "/records": {
            "get": {
                "description": "query records data with time range, pagination \u0026 filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "get records by query",
                "responses": {
                    "200": {
                        "description": "return records json"
                    }
                }
            }
        },
        "/records/template": {
            "get": {
                "description": "generate record upload csv template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "download csv records",
                "responses": {
                    "200": {
                        "description": "export csv template"
                    }
                }
            }
        },
        "/records/upload": {
            "post": {
                "description": "csv column - \"sensorId\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "records"
                ],
                "summary": "upload csv records",
                "responses": {
                    "200": {
                        "description": "return uploaded csv"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new account with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register a new account",
                "parameters": [
                    {
                        "description": "username and password",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/args.AccountRegisterArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account created, return account information"
                    },
                    "400": {
                        "description": "Username or password is missing"
                    }
                }
            }
        },
        "/sensors": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "get sensors",
                "responses": {
                    "200": {
                        "description": "return sensors by station_id"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "create sensor",
                "responses": {
                    "200": {
                        "description": "return sensor"
                    }
                }
            }
        },
        "/stations": {
            "get": {
                "description": "Get stations with params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Get stations",
                "responses": {
                    "200": {
                        "description": "Return station json array"
                    }
                }
            },
            "post": {
                "description": "Upsert stations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stations"
                ],
                "summary": "Upsert stations",
                "responses": {
                    "200": {
                        "description": "Return station json array"
                    }
                }
            }
        }
    },
    "definitions": {
        "args.AccountLoginArgs": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "bob"
                }
            }
        },
        "args.AccountRegisterArgs": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "bob"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "天津商业大学环境监测系统API",
	Description:      "天津商业大学环境监测系统API文档",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
