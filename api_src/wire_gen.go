// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package api_src

import (
	"EnvMonitoringDashboard/api_src/app"
	"EnvMonitoringDashboard/api_src/config"
	"EnvMonitoringDashboard/api_src/controller"
	"EnvMonitoringDashboard/api_src/logger"
	"EnvMonitoringDashboard/api_src/service"
	"EnvMonitoringDashboard/api_src/store"
	"github.com/google/wire"
	"io/fs"
)

// Injectors from wire.go:

func InitializeApp(webappFS fs.FS) (*app.App, error) {
	configConfig := config.NewConfig()
	loggerLogger, err := logger.NewLogger()
	if err != nil {
		return nil, err
	}
	noRouteAPI := controller.NewNoRouteAPI()
	dbClient, err := store.NewDBClient(configConfig)
	if err != nil {
		return nil, err
	}
	accountService := service.NewAccountService(configConfig, dbClient, loggerLogger)
	accountAPI := controller.NewAccountAPI(configConfig, loggerLogger, accountService)
	stationService := service.NewStationService(configConfig, dbClient, loggerLogger)
	stationAPI := controller.NewStationAPI(configConfig, loggerLogger, stationService)
	recordService := service.NewRecordService(configConfig, dbClient, loggerLogger)
	sensorService := service.NewSensorService(configConfig, dbClient, loggerLogger)
	deviceService := service.NewDeviceService(configConfig, dbClient, loggerLogger, sensorService, recordService)
	recordAPI := controller.NewRecordAPI(configConfig, loggerLogger, recordService, deviceService)
	sensorAPI := controller.NewSensorAPI(configConfig, loggerLogger, sensorService)
	dataAPI := controller.NewDataAPI()
	engine, err := app.NewEngine(webappFS, configConfig, loggerLogger, noRouteAPI, accountAPI, stationAPI, recordAPI, sensorAPI, dataAPI)
	if err != nil {
		return nil, err
	}
	appApp := app.NewApp(engine, configConfig, loggerLogger)
	return appApp, nil
}

// wire.go:

var appSet = wire.NewSet(app.NewEngine, config.NewConfig, logger.NewLogger, store.NewDBClient, service.NewAccountService, service.NewStationService, service.NewRecordService, service.NewSensorService, service.NewDeviceService, controller.NewNoRouteAPI, controller.NewDataAPI, controller.NewAccountAPI, controller.NewStationAPI, controller.NewRecordAPI, controller.NewSensorAPI)
